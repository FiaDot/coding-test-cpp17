//
// Created by LEE GUNHO on 2023/03/24.
//

// 계단오르기 : https://www.acmicpc.net/problem/2579

// 1 or 2
// 1 1 1 = x
/*
계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다.
즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.

연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다.
하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

입력의 첫째 줄에 계단의 개수가 주어진다.

둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다.
계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.
*/

#include <iostream>
using namespace std;

int main()
{
    int count;
    cin >> count;

    int a[count+1];
    for(int n=1;n<=count;n++)
    {
        cin >> a[n];
    }

    int dp[count+1];
    dp[1] = a[1];
    dp[2] = a[1] + a[2];
    dp[3] = max(a[1] + a[3], a[2] +a[3]);

    for(int n=4;n<=count;n++)
    {
        // s 1 2 3 4
        //   1 1   2    case1 : dp[2] + a[4] // 1연속 3개 안됨 dp[2]는 s 1,1 or s 2 , 112 or 22 가능
        //     2   2            dp[2]를 선택함 으로써 다음에 오는 수는 무조건 2가 되야 함을 가정

        //   1   2 1    case2 : dp[1] + a[3] + a[4] // s 1,3,4. , 121
        //                      dp[1]을 선택함 으로써 121만 가능.  112는 case1에서
        dp[n] = max(dp[n-2] + a[n], dp[n-3] + a[n-1] + a[n]);
    }

    cout << dp[count];
    return 0;
}